<?php

use PHPUnit\Framework\TestCase;

use \tripal_curator\Chado_property;

//some reading for organizing and annotating tests
//https://stackoverflow.com/questions/8313283/phpunit-best-practices-to-organize-tests
//https://jtreminio.com/2013/03/unit-testing-tutorial-introduction-to-phpunit/

final class Chado_property_test extends TestCase {


  public $cvterm;

  public function __construct() {
    //build fake cvterm
    $cvterm =  tripal_insert_cvterm(
      array(
        'name' => 'Curator Test',
        'definition' => 'A test CVterm.  Should be deleted in test.',
        'cv_name' => 'tripal',
        'is_relationship' => 0,
        'db_name' => 'tripal'
      )
    );

    $this->cvterm = $cvterm;

  }

  public function testTrueIsTrue()
  {
    $foo = true;
    $this->assertTrue($foo);

  }

  public function test_initialize_property() {



    $property  = new Chado_property($cvterm->cvterm_id);

    $this->assertInstanceOf(Chado_property::class, $property);

    //clean up
    $values = array('cvterm_id' => $cvterm->cvterm_id);
    chado_delete_record('cvterm', $values);

  }

  public function test_property_returns_usage() {

    //build fake cvterm
    $cvterm =  tripal_insert_cvterm(
      array(
        'name' => 'Curator Test',
        'definition' => 'A test CVterm.  Should be deleted in test.',
        'cv_name' => 'tripal',
        'is_relationship' => 0,
        'db_name' => 'tripal'
      )
    );

    $usage = $this->property->get_usage();

    $this->assertNotNull($usage);

    //clean up
    $values = array('cvterm_id' => $cvterm->cvterm_id);
    chado_delete_record('cvterm', $values);

  }


}
