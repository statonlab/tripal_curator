<?php

use PHPUnit\Framework\TestCase;

use \tripal_curator\Cvterm;

final class Cvterm_test extends TestCase {

//Fake CVterm for testing
  public $cvterm;

  public function __construct() {
    parent::__construct();

    //build fake cvterm
    $cvterm =  tripal_insert_cvterm(
      array(
        'name' => 'Curator Test',
        'definition' => 'A test CVterm.  Should be deleted in test.',
        'cv_name' => 'tripal',
        'is_relationship' => 0,
        'db_name' => 'tripal'
      )
    );

    $this->cvterm = $cvterm->cvterm_id;

  }

  public function testTrueIsTrue()
  {
    $foo = true;
    $this->assertTrue($foo);

  }

  public function test_initialize_property() {

    $cvterm_id = $this->cvterm;

    $property  = new Cvterm();
    $property->set_id($cvterm_id);

    $this->assertInstanceOf(Cvterm::class, $property);


    $cvterm = $property->get_full();

    $this->assertEquals("Curator Test", $cvterm->name);
    $this->assertEquals('A test CVterm.  Should be deleted in test.', $cvterm->definition);


    //clean up
    $values = array('cvterm_id' => $cvterm->cvterm_id);
    chado_delete_record('cvterm', $values);

  }


  public function __destruct() {
    $cvterm = $this->cvterm;
    //clean up
    $values = array('cvterm_id' => $cvterm->cvterm_id);
    chado_delete_record('cvterm', $values);
  }


}
